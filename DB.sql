DROP TABLE "USER_INFO" CASCADE CONSTRAINTS;
DROP TABLE "QUESTION" CASCADE CONSTRAINTS;
DROP TABLE "QUESTION_LOG" CASCADE CONSTRAINTS;
DROP TABLE "QUESTION_PARA" CASCADE CONSTRAINTS;
DROP TABLE "UPDATE_LIST" CASCADE CONSTRAINTS;

CREATE TABLE "USER_INFO" (
	"USER_CODE"	NUMBER(4)		NOT NULL,
	"U_NAME"	NVARCHAR2(20)		NOT NULL,
	"U_EMAIL"	NVARCHAR2(30)		NOT NULL,
	"U_ID"	NVARCHAR2(20)		NOT NULL,
	"U_PW"	NVARCHAR2(20)		NOT NULL,
	"ACCESS"	NUMBER(1)		NOT NULL,
	"U_POINT"	NUMBER(21)		NOT NULL
);

CREATE TABLE "QUESTION" (
	"Q_NUMBER"	NUMBER(4)		NOT NULL,
	"Q_TITLE"	VARCHAR2(100)		NOT NULL,
	"Q_POINT"	NUMBER(21)		NULL,
	"Q_TEXT"	VARCHAR2(4000)		NOT NULL,
	"Q_NAME"	NVARCHAR2(20)		NOT NULL,
	"Q_US"	NUMBER(1)		NOT NULL,
	"Q_TYPE"	NUMBER(1)		NOT NULL
);

CREATE TABLE "QUESTION_LOG" (
	"Q_L_DATE"	NVARCHAR2(30)		NOT NULL,
	"Q_NUMBER"	NUMBER(4)		NOT NULL,
	"USER_CODE"	NUMBER(4)		NOT NULL,
	"Q_L_TIME"	NVARCHAR2(30)		NOT NULL,
	"CODE"	VARCHAR2(4000)		NOT NULL,
	"ANSWER_YN"	NUMBER(1)		NOT NULL
);

CREATE TABLE "QUESTION_PARA" (
	"Q_NUMBER"	NUMBER(4)		NOT NULL,
	"Q_IN_VALUE_1"	VARCHAR2(100)		NOT NULL,
	"Q_OUT_VALUE_1"	VARCHAR2(100)		NOT NULL,
	"Q_IN_VALUE_2"	VARCHAR2(100)		NOT NULL,
	"Q_OUT_VALUE_2"	VARCHAR2(100)		NOT NULL,
	"Q_KIND"	NUMBER(1)		NOT NULL
);

CREATE TABLE "UPDATE_LIST" (
	"U_L_DATE"	NVARCHAR2(30)		NOT NULL,
	"U_L_TEXT"	NVARCHAR2(100)		NOT NULL
);

ALTER TABLE "USER_INFO" ADD CONSTRAINT "PK_USER_INFO" PRIMARY KEY (
	"USER_CODE"
);

ALTER TABLE "QUESTION" ADD CONSTRAINT "PK_QUESTION" PRIMARY KEY (
	"Q_NUMBER"
);

ALTER TABLE "QUESTION_LOG" ADD CONSTRAINT "PK_QUESTION_LOG" PRIMARY KEY (
	"Q_L_DATE",
	"Q_NUMBER",
	"USER_CODE"
);

ALTER TABLE "QUESTION_PARA" ADD CONSTRAINT "PK_QUESTION_PARA" PRIMARY KEY (
	"Q_NUMBER"
);

ALTER TABLE "UPDATE_LIST" ADD CONSTRAINT "PK_UPDATE_LIST" PRIMARY KEY (
	"U_L_DATE"
);

ALTER TABLE "QUESTION_LOG" ADD CONSTRAINT "FK_QUESTION_TO_QUESTION_LOG_1" FOREIGN KEY (
	"Q_NUMBER"
)
REFERENCES "QUESTION" (
	"Q_NUMBER"
);

ALTER TABLE "QUESTION_LOG" ADD CONSTRAINT "FK_USER_INFO_TO_QUESTION_LOG_1" FOREIGN KEY (
	"USER_CODE"
)
REFERENCES "USER_INFO" (
	"USER_CODE"
);

ALTER TABLE "QUESTION_PARA" ADD CONSTRAINT "FK_QUESTION_TO_QUESTION_PARA_1" FOREIGN KEY (
	"Q_NUMBER"
)
REFERENCES "QUESTION" (
	"Q_NUMBER"
);




--회원가입
INSERT INTO USER_INFO VALUES(1001,'TEST01','TEST01@gmail.com','test01','test01',0,10);
INSERT INTO USER_INFO VALUES((SELECT NVL(MAX(USER_CODE),1000)+1 FROM USER_INFO),'TEST02','TEST02@gmail.com','test02','test02',0,0);
INSERT INTO USER_INFO VALUES((SELECT NVL(MAX(USER_CODE),1000)+1 FROM USER_INFO),'TEST03','TEST03@gmail.com','test03','test03',0,5);
INSERT INTO USER_INFO VALUES((SELECT NVL(MAX(USER_CODE),1000)+1 FROM USER_INFO),'TEST04','TEST04@gmail.com','test04','test04',0,0);
INSERT INTO USER_INFO VALUES((SELECT NVL(MAX(USER_CODE),1000)+1 FROM USER_INFO),'TEST05','TEST05@gmail.com','test05','test05',0,0);
INSERT INTO USER_INFO VALUES((SELECT NVL(MAX(USER_CODE),1000)+1 FROM USER_INFO),'TEST06','TEST06@gmail.com','test06','test06',0,15);
--DELETE FROM USER_INFO WHERE U_PW = 'test01';
SELECT * FROM USER_INFO ORDER BY U_POINT DESC;
SELECT * FROM USER_INFO WHERE U_PW = 'a1234';
update USER_INFO set u_point = 1000

--업데이트 정보
INSERT INTO UPDATE_LIST VALUES('2021/06/01','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/02','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/03','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/04','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/05','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/06','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/07','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/08','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/09','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/10','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/11','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/12','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES('2021/06/13','페이지 테스트');
INSERT INTO UPDATE_LIST VALUES(TO_CHAR(sysdate,'YYYY/MM/DD'),'페이지 테스트');
SELECT * FROM UPDATE_LIST ORDER BY TO_DATE(U_L_DATE) DESC;
--DELETE FROM UPDATE_LIST WHERE U_L_TEXT = '페이지 테스트';

--index 페이지 banner 출력
SELECT NVL(COUNT(Q_TYPE),0) Basic_Question FROM QUESTION WHERE Q_TYPE = 0; --기본 문제
SELECT NVL(COUNT(Q_TYPE),0) Custom_Question FROM QUESTION WHERE Q_TYPE = 1; --커스텀 문제
SELECT NVL(COUNT(USER_CODE),0) User_Count FROM USER_INFO; --회원수

--로그인
SELECT USER_CODE FROM USER_INFO WHERE U_ID = 'test01' AND U_PW = 'test01';

--내 정보
SELECT * FROM USER_INFO ORDER BY USER_CODE DESC;

--문제로그 121.133.198.142
SELECT Q_NUMBER, Q_L_TIME, Q_L_DATE, ANSWER_YN  FROM QUESTION_LOG ORDER BY Q_L_DATE DESC;

--문제리스트
INSERT INTO QUESTION VALUES(1001,'Hello World~',5,'Hello World를 출력하시오','관리자',1,0);
INSERT INTO QUESTION_PARA VALUES(1001,'null','Hello World','null','Hello World',1);
INSERT INTO QUESTION VALUES(1002,'1부터 10까지 출력하기',5,'반복문을 이용하여 1부터 10까지를 String에 저장하여 출력하시오','관리자',1,0);
INSERT INTO QUESTION_PARA VALUES(1002,'0','12345678910','0','12345678910',0);
INSERT INTO QUESTION VALUES(1003,'정수 1개 입력받아 그대로 출력하기',5,'매개변수에 들어오는 값을 그대로 출력하시오','관리자',1,0);
INSERT INTO QUESTION_PARA VALUES(1003,'10','10','20','20',0);
INSERT INTO QUESTION VALUES(1004,'정수형 더하기',5,'매개변수에 들어오는 값에 더하기 10을 하고 출력하시오','관리자',1,0);
INSERT INTO QUESTION_PARA VALUES(1004,'10','20','20','30',0);
INSERT INTO QUESTION VALUES(1005,'정수형 빼기',5,'매개변수에 들어오는 값에 빼기 10을 하고 출력하시오','관리자',1,0);
INSERT INTO QUESTION_PARA VALUES(1005,'20','10','30','20',0);



--0은 int 1은 String
SELECT Q_TITLE, Q_NUMBER, Q_POINT FROM QUESTION WHERE Q_TYPE = 0 ORDER BY Q_NUMBER ASC;
SELECT q.Q_TITLE, q.Q_TEXT, qp.Q_IN_VALUE_1, qp.Q_OUT_VALUE_1
FROM QUESTION q, QUESTION_PARA qp
WHERE q.Q_NUMBER = qp.Q_NUMBER;
SELECT * FROM QUESTION_PARA;
--DELETE FROM QUESTION_PARA WHERE Q_NUMBER=1001;

SELECT Q_IN_VALUE_1, Q_IN_VALUE_2, Q_OUT_VALUE_2, Q_OUT_VALUE_2, Q_KIND
FROM QUESTION_PARA
WHERE Q_NUMBER = 1001;

--문제 로그
INSERT INTO QUESTION_LOG VALUES();
SELECT * FROM QUESTION_LOG ;
SELECT Q_NUMBER, Q_L_TIME, Q_L_DATE, ANSWER_YN  FROM QUESTION_LOG ORDER BY Q_L_DATE DESC;

SELECT CODE, Q_L_DATE FROM QUESTION_LOG WHERE Q_L_DATE = '20210621111944321';

SELECT U_POINT FROM USER_INFO WHERE USER_CODE = 1001;

SELECT Q_NUMBER
FROM QUESTION_LOG 
WHERE USER_CODE = 1001 AND Q_NUMBER = 1001 AND ANSWER_YN = 1;

select * from QUESTION

SELECT 
  last_active_time
  ,parsing_schema_name
  ,sql_text 
FROM v$sqlarea
WHERE
  sql_text like 'INSERT INTO USER_INFO%'
ORDER BY 
  last_active_time DESC;
  
 select *
  from V$SQLTEXT
 where sql_text like '%INSERT INTO USER_INFO%'; 